{"remainingRequest":"/Users/edz/Desktop/vue2.0/vue_basic_project/node_modules/babel-loader/lib/index.js!/Users/edz/Desktop/vue2.0/vue_basic_project/src/api/util.js","dependencies":[{"path":"/Users/edz/Desktop/vue2.0/vue_basic_project/src/api/util.js","mtime":1597889615000},{"path":"/Users/edz/Desktop/vue2.0/vue_basic_project/node_modules/cache-loader/dist/cjs.js","mtime":1595844950931},{"path":"/Users/edz/Desktop/vue2.0/vue_basic_project/node_modules/babel-loader/lib/index.js","mtime":1611199082262}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/edz/Desktop/vue2.0/vue_basic_project/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/edz/Desktop/vue2.0/vue_basic_project/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios'; // import { Message } from '@lingyue/dmo-ui';\n// import { store } from '@/store/index.js';\n\nvar Http = axios.create();\n\nvar ajax = function ajax(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  params.url = url; // store.dispatch('updateLoadingSet', true); //显示loading\n\n  return new Promise(function (resolve, reject) {\n    Http(params).then(function (res) {\n      // store.dispatch('updateLoadingSet', false); //移除loading\n      // console.log(params);\n      if (params.data && params.data.export === true || params.params && params.params.export === true) {\n        resolve(res.data);\n        return;\n      } //根据接口返回的数据来判断是否token过期\n      // if (res.data.code === 401100 || res.data.code === 600004) {\n      //   // relogin\n      // }\n      //success为true的时候才返回\n      // if (!res.data.success) {\n      //   // Message.error(res.message);\n      //   reject({\n      //     errorMsg: res.data.message || '网络错误',\n      //     errorData: res.data,\n      //   });\n      //   return;\n      // }\n\n\n      resolve(res.data);\n    }).catch(function (err) {\n      // store.dispatch('updateLoadingSet', false); //移除loading\n      // Message.error(err.Message || '系统错误，请稍后再试');\n      reject({\n        errorMsg: '网络错误',\n        errorData: err\n      });\n    });\n  });\n};\n\nHttp.interceptors.request.use(\n/*#__PURE__*/\n//header的设置\nfunction () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(config) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            //拦截器设置头部请求头\n            config.headers.common['X-APPLICATION-ID'] = 'DMO';\n            config.headers['Authorization'] = 'ca58a94e-880f-4b0d-a1f1-af4621436cf2'; // console.log(config)\n\n            return _context.abrupt(\"return\", config);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n            debugger;\n            return _context.abrupt(\"return\", config);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  Promise.reject(error);\n});\n\nvar apiPathWithParams = function apiPathWithParams(url, params) {\n  //适配restful的接口 path/${id}/xxxx\n  var regex = /\\$\\{(.+?)\\}/g; // ${} 特殊字符匹配\n\n  var array = url.match(regex) || [];\n  array.forEach(function (item) {\n    var key = item.substring(2, item.length).substring(0, item.length - 3);\n    var str = \"\\\\$\\\\{\".concat(key, \"\\\\}\");\n    var itemRegex = new RegExp(str, 'g');\n    url = url.replace(itemRegex, params[key]); //替换对应的字符\n\n    delete params[key];\n  });\n  return {\n    resultUrl: url,\n    resultParams: params\n  };\n};\n\nexport default {\n  request: function request(baseURL) {\n    return function (params) {\n      var apiParams = {};\n      params.opts = params.opts || {};\n      /* 处理path */\n\n      var _apiPathWithParams = apiPathWithParams(baseURL + params.url, params.opts),\n          resultUrl = _apiPathWithParams.resultUrl,\n          resultParams = _apiPathWithParams.resultParams;\n\n      params.opts = resultParams;\n      Http.defaults.withCredentials = true;\n\n      if (params.method === 'get') {\n        apiParams = {\n          params: params.opts,\n          method: params.method\n        };\n      } else if (params.method === 'post') {\n        apiParams = {\n          headers: {\n            'content-type': 'application/json'\n          },\n          data: JSON.stringify(params.opts),\n          method: params.method\n        };\n      } // 使用FormData上传文件时opts为FormData的实例\n\n\n      if (params.opts instanceof FormData) {\n        apiParams = {\n          headers: {\n            'content-type': 'multipart/form-data'\n          },\n          data: params.opts,\n          method: params.method\n        };\n      }\n\n      if (params.opts && params.opts.export === true) {\n        apiParams = _objectSpread(_objectSpread({}, apiParams), {}, {\n          responseType: 'arraybuffer',\n          timeout: 60000\n        });\n      }\n\n      return ajax(resultUrl, apiParams);\n    };\n  }\n};",{"version":3,"sources":["/Users/edz/Desktop/vue2.0/vue_basic_project/src/api/util.js"],"names":["axios","Http","create","ajax","url","params","Promise","resolve","reject","then","res","data","export","catch","err","errorMsg","errorData","interceptors","request","use","config","headers","common","error","apiPathWithParams","regex","array","match","forEach","item","key","substring","length","str","itemRegex","RegExp","replace","resultUrl","resultParams","baseURL","apiParams","opts","defaults","withCredentials","method","JSON","stringify","FormData","responseType","timeout"],"mappings":"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","sourcesContent":["import axios from 'axios';\n// import { Message } from '@lingyue/dmo-ui';\n// import { store } from '@/store/index.js';\n\nconst Http = axios.create();\n\nconst ajax = (url, params = {}) => {\n  params.url = url;\n  // store.dispatch('updateLoadingSet', true); //显示loading\n  return new Promise((resolve, reject) => {\n    Http(params)\n      .then((res) => {\n        // store.dispatch('updateLoadingSet', false); //移除loading\n        // console.log(params);\n        if (\n          (params.data && params.data.export === true) ||\n          (params.params && params.params.export === true)\n        ) {\n          resolve(res.data);\n          return;\n        }\n\t\t//根据接口返回的数据来判断是否token过期\n        // if (res.data.code === 401100 || res.data.code === 600004) {\n        //   // relogin\n        // }\n\t\t\n\t\t//success为true的时候才返回\n        // if (!res.data.success) {\n        //   // Message.error(res.message);\n        //   reject({\n        //     errorMsg: res.data.message || '网络错误',\n        //     errorData: res.data,\n        //   });\n        //   return;\n        // }\n        resolve(res.data);\n      })\n      .catch((err) => {\n        // store.dispatch('updateLoadingSet', false); //移除loading\n        // Message.error(err.Message || '系统错误，请稍后再试');\n        reject({\n          errorMsg: '网络错误',\n          errorData: err,\n        });\n      });\n  });\n};\n\nHttp.interceptors.request.use(\n  //header的设置\n  async (config) => {\n    try {\n\t\t//拦截器设置头部请求头\n      config.headers.common['X-APPLICATION-ID'] = 'DMO';\n      config.headers['Authorization'] = 'ca58a94e-880f-4b0d-a1f1-af4621436cf2';\n\n      // console.log(config)\n      return config;\n    } catch (ex) {\n      // console.log(ex);\n    }\n    debugger;\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\nconst apiPathWithParams = (url, params) => {\n  //适配restful的接口 path/${id}/xxxx\n  var regex = /\\$\\{(.+?)\\}/g; // ${} 特殊字符匹配\n  let array = url.match(regex) || [];\n  array.forEach((item) => {\n    let key = item.substring(2, item.length).substring(0, item.length - 3);\n    let str = `\\\\$\\\\{${key}\\\\}`;\n    let itemRegex = new RegExp(str, 'g');\n    url = url.replace(itemRegex, params[key]); //替换对应的字符\n    delete params[key];\n  });\n  return {\n    resultUrl: url,\n    resultParams: params,\n  };\n};\n\nexport default {\n  request(baseURL) {\n    return function(params) {\n      let apiParams = {};\n      params.opts = params.opts || {};\n\n      /* 处理path */\n      let { resultUrl, resultParams } = apiPathWithParams(\n        baseURL + params.url,\n        params.opts\n      );\n      params.opts = resultParams;\n\n      Http.defaults.withCredentials = true;\n      if (params.method === 'get') {\n        apiParams = {\n          params: params.opts,\n          method: params.method,\n        };\n      } else if (params.method === 'post') {\n        apiParams = {\n          headers: {\n            'content-type': 'application/json',\n          },\n          data: JSON.stringify(params.opts),\n          method: params.method,\n        };\n      }\n      // 使用FormData上传文件时opts为FormData的实例\n      if (params.opts instanceof FormData) {\n        apiParams = {\n          headers: {\n            'content-type': 'multipart/form-data',\n          },\n          data: params.opts,\n          method: params.method,\n        };\n      }\n\n      if (params.opts && params.opts.export === true) {\n        apiParams = {\n          ...apiParams,\n          responseType: 'arraybuffer',\n          timeout: 60000,\n        };\n      }\n      return ajax(resultUrl, apiParams);\n    };\n  },\n};\n"]}]}